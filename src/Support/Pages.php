<?php

namespace Pieldefoca\Lux\Support;

use Illuminate\Support\Str;
use Pieldefoca\Lux\Models\Page;
use Pieldefoca\Lux\Models\Locale;
use Livewire\Features\SupportConsoleCommands\Commands\ComponentParser;

class Pages
{
    public function generatePageRoutes()
    {
        $content = <<<TXT
        <?php

        use Illuminate\Support\Facades\Route;

        /*
         * BE CAREFUL
         *
         * This file is automatically generated,
         * you should not make any changes to it
         *
         */


        TXT;

        foreach(Page::published()->get() as $page) {
            foreach(config('lux.locales') as $locale) {
                $path = trim($page->translate('slug', $locale));
                if($path === '/') $path = '';
                $path = $locale === config('lux.fallback_locale') ? $path : "{$locale}/{$path}";
                $path = Str::unwrap($path, '/');

                if($page->isControllerPage()) {
                    $content .= "Route::get('/{$path}', [\\{$page->controller}::class, '{$page->controller_action}'])->name('{$page->id}.{$locale}');\n";
                } else {
                    $content .= "Route::get('/{$path}', \\{$page->livewire_component}::class)->name('{$page->id}.{$locale}');\n";
                }

            }
            $content .= "\n";
        }

        file_put_contents(base_path('routes/pages.php'), $content);
    }

    public function getLivewireComponentClassName($name)
    {
        if(class_exists($name)) return $name;

        $parser = new ComponentParser(
            'App\Livewire',
            config('livewire.view_path'),
            $name,
        );

        return $parser->classNamespace() . '\\' . $parser->className();
    }
}
